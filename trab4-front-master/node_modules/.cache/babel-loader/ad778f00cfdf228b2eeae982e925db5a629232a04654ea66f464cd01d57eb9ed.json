{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      dialog: false,\n      books: {\n        items: [],\n        headers: [{\n          title: 'Titulo',\n          value: 'title'\n        }, {\n          title: 'Autor',\n          value: 'author'\n        }, {\n          title: 'Ano publicado',\n          value: 'year_published'\n        }, {\n          title: 'Edit',\n          value: 'edit'\n        }, {\n          title: 'Delete',\n          value: 'delete'\n        }]\n      },\n      newBook: {\n        title: '',\n        author: '',\n        year_published: ''\n      },\n      editBook: {\n        title: '',\n        author: '',\n        year_published: ''\n      }\n    };\n  },\n  methods: {\n    load: async function () {\n      this.fetchBooks();\n    },\n    fetchBooks() {\n      axios.get('http://localhost:8081/books').then(response => {\n        this.books.items = response.data;\n        console.log(this.books);\n      });\n    },\n    addBook() {\n      axios.post('http://localhost:8081/books', this.newBook).then(response => {\n        this.books.items.push(response.data);\n      });\n    },\n    updateBook() {\n      const book = this.editBook;\n      console.log(book);\n      axios.put(`http://localhost:8081/books/${book.id}`, book).then(response => {\n        console.log(response);\n        this.fetchBooks();\n      });\n    },\n    deleteBook(id) {\n      axios.delete(`http://localhost:8081/books/${id}`).then(response => {\n        console.log(response);\n        this.books.items = this.books.items.filter(b => b.id !== id);\n      });\n    },\n    deleteItem(item) {\n      const id = Number.parseInt(item.id, 10);\n      this.deleteBook(id);\n    },\n    openDialog(item) {\n      this.editBook = {\n        ...item\n      };\n      console.log(this.editBook);\n      this.dialog = true;\n    },\n    saveItemEdit() {\n      this.updateBook();\n      this.dialog = false;\n    }\n  },\n  created() {\n    this.load();\n  }\n};","map":{"version":3,"names":["axios","data","dialog","books","items","headers","title","value","newBook","author","year_published","editBook","methods","load","fetchBooks","get","then","response","console","log","addBook","post","push","updateBook","book","put","id","deleteBook","delete","filter","b","deleteItem","item","Number","parseInt","openDialog","saveItemEdit","created"],"sources":["src/components/HomeApp.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Cadastro Bibliotecacd </h1>\n      <div>\n        <v-row justify='center' align='center'>\n          <v-col cols='6'>\n            <v-text-field v-model='newBook.title' label='Título' />\n          </v-col>\n        </v-row>\n        <v-row justify='center' align='center'>\n          <v-col cols='6'>\n            <v-text-field v-model='newBook.author' label='Autor' />\n          </v-col>\n        </v-row>\n        <v-row justify='center' align='center'>\n          <v-col cols='6'>\n            <v-text-field v-model='newBook.year_published' label='Ano Publicação' />\n          </v-col>\n        </v-row>\n        <v-row justify='end' align='center'>\n          <v-col cols='3'>\n            <v-btn @click='addBook()' color='light-blue'> Adicionar livro </v-btn>\n          </v-col>\n        </v-row>\n      </div>\n      <v-spacer />\n      <v-row />\n      <v-row>\n        <v-col cols='12'>\n            <v-card>\n              <v-row justify='center' align='center'>\n                <v-col cols='10'>\n                  <v-data-table :headers='books.headers' :items='books.items'>\n                    <!-- eslint-disable-next-line vue/valid-v-slot -->\n                    <template v-slot:item.edit='{ item }'>\n                      <v-btn elevation=\"0\" icon color=\"gray\" @click=\"openDialog(item)\">\n                        <v-icon dark>\n                          mdi-pencil\n                        </v-icon>\n                      </v-btn>\n                    </template>\n                    <!-- eslint-disable-next-line vue/valid-v-slot -->\n                    <template v-slot:item.delete='{ item }'>\n                      <v-btn elevation=\"0\" icon color=\"red\" @click=\"deleteItem(item)\">\n                        <v-icon dark>\n                          mdi-delete\n                        </v-icon>\n                      </v-btn>\n                    </template>\n                  </v-data-table> \n                </v-col>\n              </v-row>\n            </v-card>\n        </v-col>\n      </v-row>\n      <v-dialog v-model='dialog' width='700'>\n        <v-card>\n          <div>\n            <v-row justify='center' align='center'>\n              <v-col cols='6'>\n                <v-text-field v-model='editBook.title' label='Título' />\n              </v-col>\n            </v-row>\n            <v-row justify='center' align='center'>\n              <v-col cols='6'>\n                <v-text-field v-model='editBook.author' label='Autor' />\n              </v-col>\n            </v-row>\n            <v-row justify='center' align='center'>\n              <v-col cols='6'>\n                <v-text-field v-model='editBook.year_published' label='Ano Publicação' />\n              </v-col>\n            </v-row>\n            <v-row justify='end' align='center'>\n              <v-col cols='3'>\n                <v-btn @click='saveItemEdit()' color='light-blue'> Salvar Livro </v-btn>\n              </v-col>\n            </v-row>\n          </div>          \n        </v-card>\n      </v-dialog>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n\n  export default {\n    data() {\n      return {\n        dialog: false,\n        books: {\n          items: [],\n          headers: [\n            {\n              title: 'Titulo',\n              value: 'title',\n            },\n            {\n              title: 'Autor',\n              value: 'author'\n            },\n            {\n              title: 'Ano publicado',\n              value: 'year_published',\n            },\n            {\n              title: 'Edit',\n              value: 'edit',\n            },\n            {\n              title: 'Delete',\n              value: 'delete',\n            },\n        ],\n        },\n        newBook: {\n          title: '',\n          author: '',\n          year_published: ''\n        },\n        editBook: {\n          title: '',\n          author: '',\n          year_published: ''\n        },\n      }\n    },\n    methods: {\n      load: async function () {\n        this.fetchBooks();\n\n      },\n      fetchBooks() {\n        axios.get('http://localhost:8081/books')\n          .then(response => {\n            this.books.items = response.data;\n            console.log(this.books);\n          });\n      },\n      addBook() {\n        axios.post('http://localhost:8081/books', this.newBook)\n          .then(response => {\n            this.books.items.push(response.data);\n          });\n      },\n      updateBook() {\n        const book = this.editBook;\n        console.log(book);\n        axios.put(`http://localhost:8081/books/${book.id}`, book)\n          .then(response => {\n            console.log(response);\n            this.fetchBooks();\n          });\n      },\n      deleteBook(id) {\n        axios.delete(`http://localhost:8081/books/${id}`)\n          .then(response => {\n            console.log(response);\n            this.books.items = this.books.items.filter(b => b.id !== id);\n          });\n        },\n        deleteItem(item) {\n          const id = Number.parseInt(item.id, 10);\n          this.deleteBook(id);\n        },\n        openDialog(item) {\n          this.editBook = { ...item };\n          console.log(this.editBook);\n          this.dialog = true;\n        },\n        saveItemEdit() {\n          this.updateBook();\n          this.dialog = false;\n        },\n    },\n    created() {\n      this.load();\n    }\n  }\n\n  </script>\n  "],"mappings":";AAqFA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,KAAA;QACAC,KAAA;QACAC,OAAA,GACA;UACAC,KAAA;UACAC,KAAA;QACA,GACA;UACAD,KAAA;UACAC,KAAA;QACA,GACA;UACAD,KAAA;UACAC,KAAA;QACA,GACA;UACAD,KAAA;UACAC,KAAA;QACA,GACA;UACAD,KAAA;UACAC,KAAA;QACA;MAEA;MACAC,OAAA;QACAF,KAAA;QACAG,MAAA;QACAC,cAAA;MACA;MACAC,QAAA;QACAL,KAAA;QACAG,MAAA;QACAC,cAAA;MACA;IACA;EACA;EACAE,OAAA;IACAC,IAAA,iBAAAA,CAAA;MACA,KAAAC,UAAA;IAEA;IACAA,WAAA;MACAd,KAAA,CAAAe,GAAA,gCACAC,IAAA,CAAAC,QAAA;QACA,KAAAd,KAAA,CAAAC,KAAA,GAAAa,QAAA,CAAAhB,IAAA;QACAiB,OAAA,CAAAC,GAAA,MAAAhB,KAAA;MACA;IACA;IACAiB,QAAA;MACApB,KAAA,CAAAqB,IAAA,qCAAAb,OAAA,EACAQ,IAAA,CAAAC,QAAA;QACA,KAAAd,KAAA,CAAAC,KAAA,CAAAkB,IAAA,CAAAL,QAAA,CAAAhB,IAAA;MACA;IACA;IACAsB,WAAA;MACA,MAAAC,IAAA,QAAAb,QAAA;MACAO,OAAA,CAAAC,GAAA,CAAAK,IAAA;MACAxB,KAAA,CAAAyB,GAAA,gCAAAD,IAAA,CAAAE,EAAA,IAAAF,IAAA,EACAR,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA;QACA,KAAAH,UAAA;MACA;IACA;IACAa,WAAAD,EAAA;MACA1B,KAAA,CAAA4B,MAAA,gCAAAF,EAAA,IACAV,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA;QACA,KAAAd,KAAA,CAAAC,KAAA,QAAAD,KAAA,CAAAC,KAAA,CAAAyB,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAJ,EAAA,KAAAA,EAAA;MACA;IACA;IACAK,WAAAC,IAAA;MACA,MAAAN,EAAA,GAAAO,MAAA,CAAAC,QAAA,CAAAF,IAAA,CAAAN,EAAA;MACA,KAAAC,UAAA,CAAAD,EAAA;IACA;IACAS,WAAAH,IAAA;MACA,KAAArB,QAAA;QAAA,GAAAqB;MAAA;MACAd,OAAA,CAAAC,GAAA,MAAAR,QAAA;MACA,KAAAT,MAAA;IACA;IACAkC,aAAA;MACA,KAAAb,UAAA;MACA,KAAArB,MAAA;IACA;EACA;EACAmC,QAAA;IACA,KAAAxB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}